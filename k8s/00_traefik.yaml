apiVersion: v1
kind: Service
metadata:
  name: traefik

spec:
  ports:
    - protocol: TCP
      name: web
      port: 8000
    - protocol: TCP
      name: admin
      port: 8080
    - protocol: TCP
      name: websecure
      port: 4443
  selector:
    app: traefik

---

apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: default
  name: traefik-ingress-controller

---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: default
  name: traefik
  labels:
    app: traefik

spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik-ingress-controller
      containers:
        - name: traefik
          image: traefik:v3.0
          args:
            - --api.insecure
            - --accesslog
            - --entrypoints.web.Address=:8000
            - --entrypoints.websecure.Address=:4443
            - --providers.kubernetescrd
            - --certificatesresolvers.myresolver.acme.tlschallenge
            - --certificatesresolvers.myresolver.acme.email=janleskovec1@gmail.com
            - --certificatesresolvers.myresolver.acme.storage=acme.json
            # Please note that this is the staging Let's Encrypt server.
            # Once you get things working, you should remove that whole line altogether.
            #- --certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
          ports:
            - name: web
              containerPort: 8000
            - name: websecure
              containerPort: 4443
            - name: admin
              containerPort: 8080
          resources: {}

---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: stripprefix
  namespace: default
spec:
  stripPrefix:
    prefixes:
      - "/api/v1/auth"
      - "/api/v1/maps"
      - "/api/v1/todo"
      - "/api/v1/packets"
    #forceSlash: false
---
#apiVersion: traefik.containo.us/v1alpha1
#kind: IngressRoute
#metadata:
#  name: ingress
#  namespace: default
#spec:
#  entryPoints:
#    - web
#  routes:
#  - match: PathPrefix(`/api/v1/auth`)
#    kind: Rule
#    services:
#    - name: app-auth
#      port: 8080
#    middlewares:
#      - name: stripprefix
#  - match: PathPrefix(`/api/v1/maps`)
#    kind: Rule
#    services:
#    - name: app-maps
#      port: 8080
#    middlewares:
#      - name: stripprefix
#  - match: PathPrefix(`/api/v1/packets`)
#    kind: Rule
#    services:
#    - name: app-packets
#      port: 8080
#    middlewares:
#      - name: stripprefix
#  - match: PathPrefix(`/api/v1/todo`)
#    kind: Rule
#    services:
#    - name: app-todo-example
#      port: 8080
#    middlewares:
#      - name: stripprefix
#  - match: PathPrefix(`/grafana`)
#    kind: Rule
#    services:
#    - name: grafana
#      port: 3000
#  - match: PathPrefix(`/`)
#    kind: Rule
#    services:
#    - name: web-ui
#      port: 80
#---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: ingress
  namespace: default
spec:
  entryPoints:
    - websecure
  routes:
  - match: PathPrefix(`/api/v1/auth`)
    kind: Rule
    services:
    - name: app-auth
      port: 8080
    middlewares:
      - name: stripprefix
  - match: PathPrefix(`/api/v1/maps`)
    kind: Rule
    services:
    - name: app-maps
      port: 8080
    middlewares:
      - name: stripprefix
  - match: PathPrefix(`/api/v1/packets`)
    kind: Rule
    services:
    - name: app-packets
      port: 8080
    middlewares:
      - name: stripprefix
  - match: PathPrefix(`/api/v1/todo`)
    kind: Rule
    services:
    - name: app-todo-example
      port: 8080
    middlewares:
      - name: stripprefix
  - match: PathPrefix(`/grafana`)
    kind: Rule
    services:
    - name: grafana
      port: 3000
  - match: PathPrefix(`/`)
    kind: Rule
    services:
    - name: web-ui
      port: 80
  tls:
    certResolver: myresolver
---
